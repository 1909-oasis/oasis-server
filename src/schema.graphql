type Query {
  info: String!
  me: User!
}

type Mutation {
  signup(
    email: String!
    password: String!
    firstName: String!
    lastName: String!
  ): AuthPayload
  login(email: String!, password: String!): AuthPayload
  swipe(cocktailId: ID!, rating: Int!): UserCocktail!
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  votes: [UserCocktail!]!
  queue: [Cocktail!]!
}

type UserCocktail {
  id: ID!
  user: User!
  cocktail: Cocktail!
  rating: Int!
  recommended: Boolean!
}

type Cocktail {
  id: ID!
  name: String!
  alcoholic: Boolean!
  imageUrl: String!
  starterPack: Boolean!
  totalRating: Int!
  totalVotes: Int!
  recommendedCount: Int!
  ingredients: [CocktailIngredient!]!
}

type CocktailIngredient {
  id: ID!
  measure: String!
  cocktail: Cocktail!
  ingredient: Ingredient!
}

type Ingredient {
  id: ID!
  name: String!
}
